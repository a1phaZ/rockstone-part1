{"version":3,"sources":["components/messages/Messages.List.component.js","components/messages/Messages.component.js","components/time/Time.component.js","handlers/useTime.js","components/wrapper/Wrapper.component.js","App.js","handlers/useSwipe.js","reportWebVitals.js","index.js"],"names":["MessagesList","messages","useState","length","setLength","className","setClassName","useEffect","mLength","list","map","message","key","animClassName","Messages","props","setMessage","setState","scrollHandler","e","x","target","documentElement","scrollLeft","y","scrollTop","state","scroll","getScroll","id","bind","document","this","window","addEventListener","setScrollPosition","removeEventListener","setMessages","onSubmit","preventDefault","value","onChange","currentTarget","Component","Time","time","Date","now","setDate","timer","setInterval","clearInterval","toLocaleTimeString","hour","minute","second","useTime","Wrapper","swipe","children","onTouchMove","initialState","panel","getTime","scrolls","reducer","action","type","payload","App","useReducer","dispatch","forward","setForward","back","setBack","cX","setX","initialX","setInitialX","delta","outerWidth","useSwipe","swipePanel","useCallback","m","changedTouches","clientX","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.45ed697b.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport './styles.css';\r\n\r\nconst MessagesList = ({messages}) => {\r\n\tconst [length, setLength] = useState(() => messages.length);\r\n\tconst [className, setClassName] = useState('');\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst mLength = messages.length;\r\n\t\tif (length < mLength) {\r\n\t\t\tsetLength(mLength);\r\n\t\t\tsetClassName('scale-up-hor-left');\r\n\t\t}\r\n\t}, [messages, length]);\r\n\t\r\n\tconst list = messages.map((message, key) => {\r\n\t\tconst animClassName = (key === messages.length - 1) ? className : null;\r\n\t\treturn (\r\n\t\t\t<p\r\n\t\t\t\tkey={key}\r\n\t\t\t\tclassName={animClassName}\r\n\t\t\t>\r\n\t\t\t\t{message}\r\n\t\t\t</p>\r\n\t\t);\r\n\t});\r\n\treturn (\r\n\t\t<div className={'messages-list'}>\r\n\t\t\t{list}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default MessagesList;\r\n","import React, {Component} from 'react';\r\nimport MessagesList from \"./Messages.List.component\";\r\n\r\nclass Messages extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmessage: '',\r\n\t\t\tscroll: this.props.getScroll(this.props.id),\r\n\t\t}\r\n\t\t\r\n\t\tthis.setMessage = this.setMessage.bind(this);\r\n\t\tthis.scrollHandler = this.scrollHandler.bind(this);\r\n\t}\r\n\t\r\n\tsetMessage = (message) => {\r\n\t\tthis.setState({message});\r\n\t}\r\n\t\r\n\tscrollHandler = (e) => {\r\n\t\tthis.setState({x: e.target.documentElement.scrollLeft, y: e.target.documentElement.scrollTop});\r\n\t}\r\n\t\r\n\tcomponentDidMount() {\r\n\t\tdocument.documentElement.scrollTop = this.state.scroll.y;\r\n\t\tdocument.documentElement.scrollLeft = this.state.scroll.x;\r\n\t\t\r\n\t\twindow.addEventListener('scroll', this.scrollHandler);\r\n\t}\r\n\t\r\n\tcomponentWillUnmount() {\r\n\t\tthis.props.setScrollPosition(this.props.id, this.state.x || 0, this.state.y || 0);\r\n\t\twindow.removeEventListener('scroll', this.scrollHandler);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst {setMessages, messages, className} = this.props;\r\n\t\tconst {setMessage} = this;\r\n\t\tconst {message} = this.state;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={className}\r\n\t\t\t>\r\n\t\t\t\t<form\r\n\t\t\t\t\tclassName={'row align-items-center'}\r\n\t\t\t\t\tonSubmit={e => {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tsetMessages(message);\r\n\t\t\t\t\t\tsetMessage('');\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className={'col-8'}>\r\n\t\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\t\t\tclassName={'form-control'}\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tconst {value} = e.currentTarget;\r\n\t\t\t\t\t\t\t\t\tthis.setMessage(value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={'col-4'}>\r\n\t\t\t\t\t\t<button className={'btn btn-primary'}>Send</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t</form>\r\n\t\t\t\t<MessagesList messages={messages}/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\t\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport {useTime} from \"../../handlers/useTime\";\r\nimport './styles.css';\r\n\r\nconst Time = () => {\r\n\tconst {time} = useTime();\r\n\treturn (\r\n\t\t\t<p>{time}</p>\r\n\t)\r\n}\r\n\r\nexport default Time;","import {useEffect, useState} from \"react\";\r\n\r\nexport const useTime = () => {\r\n\tconst locale = 'ru';\r\n\tconst timeout = 1000;\r\n\tconst [now, setDate] = useState(new Date());\r\n\t\r\n\tuseEffect(() => {\r\n\t\tconst timer = setInterval(() => {\r\n\t\t\tsetDate(new Date());\r\n\t\t}, timeout);\r\n\t\treturn () => {\r\n\t\t\tclearInterval(timer);\r\n\t\t}\r\n\t}, []);\r\n\t\r\n\tconst time = now.toLocaleTimeString(locale, { hour: 'numeric', minute: 'numeric', second: 'numeric' });\r\n\t\r\n\treturn {\r\n\t\ttime\r\n\t}\r\n}","import React from 'react';\r\n\r\nconst Wrapper = ({id, className, swipe, getScroll, setScrollPosition, children}) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tid={id}\r\n\t\t\tclassName={className}\r\n\t\t\tonTouchMove={(e) => {\r\n\t\t\t\tswipe(e);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, {useCallback, useEffect, useReducer} from 'react';\n// import './App.css';\nimport Messages from \"./components/messages/Messages.component\";\nimport Time from \"./components/time/Time.component\";\nimport {useSwipe} from \"./handlers/useSwipe\";\nimport Wrapper from \"./components/wrapper/Wrapper.component\";\n\nconst initialState = {\n\tmessages: [],\n\tpanel: 'messages',\n\ttime: new Date().getTime(),\n\tscrolls: []\n}\n\nfunction reducer(state, action) {\n\tswitch (action.type) {\n\t\tcase 'setMessages':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: [...state.messages, action.payload.message]\n\t\t\t}\n\t\tcase 'setPanel': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpanel: action.payload.panel\n\t\t\t}\n\t\t}\n\t\tcase 'setScroll': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tscrolls: {\n\t\t\t\t  ...state.scrolls,\n\t\t\t\t  [action.payload.id]: {\n\t\t\t\t    x: action.payload.x,\n\t\t\t\t    y: action.payload.y\n\t\t\t\t  }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nfunction App() {\n\tconst [state, dispatch] = useReducer(reducer, initialState);\n\tconst [{forward, back}, setX] = useSwipe(null);\n\tconst {panel} = state;\n\t\n\tconst swipePanel = useCallback((m) => {\n\t\tif (m !== 'time') {\n\t\t\tdispatch({type: 'setPanel', payload: {panel: 'time'}});\n\t\t}\n\t\tif (m !== 'messages') {\n\t\t\tdispatch({type: 'setPanel', payload: {panel: 'messages'}});\n\t\t}\n\t}, []);\n\t\n\tuseEffect(() => {\n\t\tif (!forward && !back) return;\n\t\tif (forward) swipePanel('time');\n\t\tif (back) swipePanel('messages');\n\t}, [forward, back, swipePanel]);\n\t\n\tconst setMessages = (message) => {\n\t\tdispatch({type: 'setMessages', payload: {message}});\n\t}\n\t\n\tconst swipe = (e) => {\n\t\tsetX(e.changedTouches[0].clientX);\n\t}\n\t\n\tconst setScrollPosition = useCallback((id, x, y) => {\n\t\tdispatch({type: 'setScroll', payload: {id, x, y}})\n\t}, []);\n\t\n\tconst getScroll = (id) => {\n\t\tif (!state.scrolls[id]) {\n\t\t\treturn {x: 0, y: 0}\n\t\t}\n\t\treturn {...state.scrolls[id]};\n\t}\n\t\n\treturn (\n\t\t<div className=\"App container pt-3\">\n\t\t\t<Wrapper\n\t\t\t\tid={state.panel}\n\t\t\t\tclassName={`${state.panel}-panel`}\n\t\t\t\tswipe={swipe}\n\t\t\t>\n\t\t\t\t{\n\t\t\t\t\tpanel === 'messages' &&\n\t\t\t\t\t<Messages\n\t\t\t\t\t\tid={'messages'}\n\t\t\t\t\t\tclassName={'messages-panel'}\n\t\t\t\t\t\tmessages={state.messages}\n\t\t\t\t\t\tsetMessages={setMessages}\n\t\t\t\t\t\tgetScroll={getScroll}\n\t\t\t\t\t\tsetScrollPosition={setScrollPosition}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tpanel === 'time' &&\n\t\t\t\t\t<Time />\n\t\t\t\t}\n\t\t\t</Wrapper>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import {useEffect, useState} from \"react\";\r\n\r\nexport const useSwipe = (x) => {\r\n\tconst [forward, setForward] = useState(false);\r\n\tconst [back, setBack] = useState(false);\r\n\tconst [cX, setX] = useState(() => x);\r\n\tconst [initialX, setInitialX] = useState(null);\r\n\tconst delta = window.outerWidth / 2;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (back || forward) {\r\n\t\t\tsetInitialX(null);\r\n\t\t\tsetBack(false);\r\n\t\t\tsetForward(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (initialX) {\r\n\t\t\tif ((cX - initialX > delta) && !forward) {\r\n\t\t\t\tsetForward(true);\r\n\t\t\t\tsetInitialX(null);\r\n\t\t\t}\r\n\t\t\tif ((initialX - cX > delta) && !back) {\r\n\t\t\t\tsetBack(true);\r\n\t\t\t\tsetInitialX(null);\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetInitialX(cX);\r\n\t}, [initialX, cX, back, forward, delta]);\r\n\t\r\n\tconst setClientX = (x) => {\r\n\t\tsetX(x);\r\n\t}\r\n\t\r\n\treturn [\r\n\t\t{\r\n\t\t\tforward,\r\n\t\t\tback\r\n\t\t},\r\n\t\tsetClientX\r\n\t]\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}